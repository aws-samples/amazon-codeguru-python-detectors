#
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#

name: Reviewer

on:
  pull_request:
    # for all branches (no filter)
  push:
    # only main
    branches:
      main

permissions:
  id-token: write
  contents: read
  security-events: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Reviewer
    runs-on: ubuntu-latest
    steps:
    - name: Assume IAM role
      id: assume-iam-role
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::048169001733:role/GuruGitHubCICDRole
        aws-region: us-west-2

    - name: Check out repository
      uses: actions/checkout@v2
      if: steps.assume-iam-role.outcome == 'success'
      with:
        fetch-depth: 0

    - name: Create empty dir
      run: mkdir -p build/libs

    - name: Run CodeGuru Reviewer
      id: analysis
      uses: aws-actions/codeguru-reviewer@v1.1
      if: steps.assume-iam-role.outcome == 'success'
      continue-on-error: false
      with:
        s3_bucket: codeguru-reviewer-github-profiler-demo-048169001733-uw2
        build_path: ./build/libs

    - name: Upload full analysis results (SARIF format) to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: codeguru-results-sarif-json
        path: codeguru-results.sarif.json

    - name: Save results summary and ultra-summary to files on local disk
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      run: |
        jq '.runs[0].results[] | {ruleId: .ruleId, firstFile: .locations[0].physicalLocation.artifactLocation.uri, firstLine: .locations[0].physicalLocation.region.startLine}' \
          codeguru-results.sarif.json > codeguru-results-summary.json
        echo "CICD Action:" > codeguru-results-ultra-summary.txt
        echo "ruleId filePath lineNumber" >> codeguru-results-ultra-summary.txt
        jq -r '.runs[0].results[] | {ruleId: .ruleId, firstFile: .locations[0].physicalLocation.artifactLocation.uri, firstLine: .locations[0].physicalLocation.region.startLine} | join("  ")' \
          codeguru-results.sarif.json >> codeguru-results-ultra-summary.txt

    - name: Upload results summary to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: codeguru-results-summary-json
        path: codeguru-results-summary.json

    - name: Upload results ultra-summary to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: codeguru-results-ultra-summary-txt
        path: codeguru-results-ultra-summary.txt

    - name: Find the number of the current PR
      uses: jwalton/gh-find-current-pr@v1
      id: findpr

    - name: Add a comment to the current PR with summary of analysis results
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        append: false
        header: analyze
        number: ${{ steps.findpr.outputs.pr }}
        path: codeguru-results-ultra-summary.txt
        # message does not seem to be displayed in comment when `path` option is used.
        message: |
          Summary of findings from CodeGuru Reviewer (more details in workflow artifacts)

    ####### Uploading to GitHub's code scan results UX will only work once the repo is public.

    # - name: Upload analysis results to be shown on the GitHub Security Scans UX
    #   if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: codeguru-results.sarif.json


